/**
 * A range of whole numbers starting at `from` (inclusive) and ending at `to`
 * (Exclusive).
 */
export declare class Range {
    readonly from: number;
    readonly to: number;
    static compare(one: Range, other: Range): number;
    static merge(one: Range, other: Range): Range;
    static totalCovered(ranges: Array<Range>): number;
    constructor(from: number, to?: number);
    get length(): number;
    overlapsWith(other: Range): boolean;
    contains(other: Range): boolean;
}
//# sourceMappingURL=range.d.ts.map