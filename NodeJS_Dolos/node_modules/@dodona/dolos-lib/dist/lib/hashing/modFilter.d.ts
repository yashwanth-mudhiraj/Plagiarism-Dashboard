import { Fingerprint, HashFilter } from "./hashFilter";
export declare class ModFilter extends HashFilter {
    private readonly k;
    private readonly mod;
    /**
     * Generates a HashFilter object with given kgram size and mod value. It will
     * return all hashes whose value is 0 after % mod.
     *
     * @param k The kgram size of which hashes are calculated
     * @param mod The mod value for which hashes to keep
     * @param debug Whether to output debugging information in fingerprints.
     */
    constructor(k: number, mod: number, debug?: boolean);
    /**
     * Returns an async iterator that yields tuples containing a hashing and its
     * corresponding kgram position. Can be called successively on multiple files.
     *
     * @param tokens The list of tokens to process.
     */
    fingerprints(tokens: string[]): AsyncIterableIterator<Fingerprint>;
}
//# sourceMappingURL=modFilter.d.ts.map